name: Automation_code_test
on:
  push:
    branches:
      - "main"
      - "dev"
  pull_request:
    branches:
      - "main"
      # A workflow run is made up of one or more jobs that can run sequentially or in parallel
env:
  BUILD_TYPE: Release

jobs:
  functional_test:
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3
      - name: Environment Setup
        run: |
          sudo apt-get update
          source .github/customs/envs
          sudo apt-get install cmake build-essential python3-full "$CUSTOM_APT_INSTALL" -y
          echo -e "[INFO] Environment Setup Done! \n [信息] 环境配置完成！"
      - name: test_cmake
        run: | 
           cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} && CMakeFlag=1 || (echo -e "CMake Failed, Please Check Your CMakelists.txt\n[错误] 你的CMake配置存在问题，请检查你的CMakeLists.txt！\n[note] 如果你需要使用某些第三方依赖,请修改env文件,添加上所需要的依赖。" ; CMakeFlag=0 && exit 1)
           test 1 -eq $CMakeFlag && cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
           echo -e "[INFO] CMake Done! \n [信息] CMake&Make执行完成！"

      - name: Custom CTest
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{env.BUILD_TYPE}}

      - name: addInfoTest
        run: |
          source .github/customs/envs
          python3 .github/customs/python/addInfoTest.py ${{github.workspace}}/build/Main
      - name: deleteInfoTest
        run: |
          source .github/customs/envs
          python3 .github/customs/python/deleteTest.py ${{github.workspace}}/build/Main
      - name: modifyTheNumberOfCoinsTest
        run: |
          source .github/customs/envs
          python3 .github/customs/python/modifyTheNumberOfCoinsTest.py ${{github.workspace}}/build/Main
      - name: sortTest
        run: |
          source .github/customs/envs
          python3 .github/customs/python/sortTest.py ${{github.workspace}}/build/Main
      - name: saveTest
        run: |
          source .github/customs/envs
          python3 .github/customs/python/saveTest.py ${{github.workspace}}/build/Main
  code_quality_test:
    runs-on: ubuntu-latest
    # 准备执行脚本完整性检测
    steps:
      - uses: actions/checkout@v3
      - name: Environment Setup
        run: |
          sudo apt-get update
          source .github/customs/envs
          sudo apt-get install cmake build-essential "$CUSTOM_APT_INSTALL" -y
      - name: if_cpp_is_used
        run: |
          source .github/customs/envs
          bash .github/customs/classTest.sh ${{github.workspace}}
      - name: test_code_quality
        run: |
          source .github/customs/envs
          sudo apt-get install cppcheck -y
          cppcheck --enable=all --error-exitcode=1 .